#define ZMK_POINTING_DEFAULT_MOVE_VAL 2300 // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 40    // default: 10

#include <behaviors/num_word.dtsi> // Requires zmk-auto-layer module.
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define DEF 0
#define NAV 1
#define SYM 2
#define ADJ 3
#define EXTRA 4

&bootloader {
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <175>;
            global-quick-tap;
        };

        para: para {
            compatible = "zmk,behavior-tap-dance";
            label = "PARA";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS>, <&kp RIGHT_PARENTHESIS>;
        };

        caps: caps {
            compatible = "zmk,behavior-caps-word";
            label = "CAPS";
            #binding-cells = <0>;
            continue-list = <MINUS BACKSPACE>;
        };

        paraless: paraless {
            compatible = "zmk,behavior-mod-morph";
            label = "PARALESS";
            bindings = <&kp LEFT_PARENTHESIS>, <&kp LESS_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        paragreat: paragreat {
            compatible = "zmk,behavior-mod-morph";
            label = "PARAGREAT";
            bindings = <&kp RIGHT_PARENTHESIS>, <&kp GREATER_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        mt2: mod_tap_custom_2 {
            compatible = "zmk,behavior-hold-tap";
            label = "MT2";
            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick_tap_ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <175>;
            global-quick-tap;
            hold-trigger-on-release;
        };
    };

    macros {
        browsertabF: browsertab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp TAB>,
                <&macro_release>,
                <&kp LCTRL>;
        };

        browsertabB: browsertabB {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_press>,
                <&kp LEFT_SHIFT>,
                <&macro_tap>,
                <&kp TAB>,
                <&macro_release>,
                <&kp LCTRL>,
                <&macro_release>,
                <&kp LEFT_SHIFT>;

            label = "BROWSERTABB";
        };
    };

    combos {
        compatible = "zmk,combos";

        escape {
            bindings = <&kp ESCAPE>;
            key-positions = <16 15>;
        };

        perc {
            bindings = <&kp PERCENT>;
            key-positions = <5 17>;
        };

        equal {
            bindings = <&kp EQUAL>;
            key-positions = <28 16>;
        };

        dollar {
            bindings = <&kp DOLLAR>;
            key-positions = <4 16>;
        };

        pound {
            bindings = <&kp POUND>;
            key-positions = <3 15>;
        };

        at {
            bindings = <&kp AT>;
            key-positions = <2 14>;
        };

        backslash {
            bindings = <&kp BACKSLASH>;
            key-positions = <26 14>;
        };

        copy {
            bindings = <&kp LC(C)>;
            key-positions = <27 26>;
        };

        paste {
            bindings = <&kp LC(V)>;
            key-positions = <27 28>;
        };

        star {
            bindings = <&kp STAR>;
            key-positions = <8 20>;
        };

        slash {
            bindings = <&kp SLASH>;
            key-positions = <32 20>;
        };

        plus {
            bindings = <&kp PLUS>;
            key-positions = <7 19>;
        };

        minus {
            bindings = <&kp KP_MINUS>;
            key-positions = <31 19>;
        };

        underscore {
            bindings = <&kp UNDER>;
            key-positions = <30 18>;
        };

        leftbrack {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <7 8>;
        };

        rightbrack {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <8 9>;
        };

        para-less {
            bindings = <&paraless>;
            key-positions = <31 32>;
        };

        para-great {
            bindings = <&paragreat>;
            key-positions = <33 32>;
        };

        combo_enter {
            bindings = <&kp ENTER>;
            key-positions = <19 21>;
        };
    };

    //

    keymap {
        compatible = "zmk,keymap";

        DEF {
            display-name = "Base";

            // -----------------------------------------------------------------------------------------
            // |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |
            // |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |
            // |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |
            // | GUI | CTRL | SHFT | LWR | SPC |   | ENT | RSE  | BKSP | ALT | ESC |

            bindings = <
&kp ESCAPE    &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y      &kp U      &kp I          &kp O    &kp P     &kp BACKSPACE
&kp CAPSLOCK  &kp A  &kp S  &kp D     &kp F  &kp G        &kp H      &kp J      &kp K          &kp L    &kp SEMI  &kp SQT
&kp LCTRL     &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N      &kp M      &kp COMMA      &kp DOT  &kp FSLH  &kp RSHFT
                            &kp LGUI  &mo 2  &kp ENTER    &kp SPACE  &lt 3 TAB  &kp BACKSPACE
            >;
        };

        Testing {
            display-name = "Test";
            bindings = <
&kp TAB       &kp Q         &kp W            &kp E             &kp R              &kp T          &kp Y        &kp U               &kp I                    &kp O                     &kp P                &kp DELETE
&lt 8 ESCAPE  &mt2 LCTRL A  &mt2 LEFT_ALT S  &mt2 LEFT_META D  &mt2 LEFT_SHIFT F  &kp G          &kp H        &mt2 RIGHT_SHIFT J  &mt2 RIGHT_META K        &mt2 RIGHT_ALT L          &mt2 RCTRL SEMI      &mt2 DOUBLE_QUOTES SQT
&kp LCTRL     &kp Z         &kp X            &kp C             &kp V              &kp B          &kp N        &kp M               &mt2 LESS_THAN COMMA     &mt2 GREATER_THAN PERIOD  &mt2 QUESTION SLASH  &kp RSHFT
                                             &lt 7 LMETA       &lt 2 BSPC         &lt 6 ENTER    &lt 5 SPACE  &lt 3 TAB           &mt2 LC(BACKSPACE) BSPC
            >;
        };

        NAV {
            display-name = "Nav";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            // | GUI | CTRL | SHFT | LWR | SPC |   | ENT | RSE  | BKSP | ALT | ESC |

            bindings = <
&bootloader  &none  &none  &none         &none         &none        &none                     &none                    &none                   &none                             &none  &none
&caps_word   &none  &none  &browsertabB  &browsertabF  &none        &mt2 LC(LEFT_ARROW) LEFT  &mt2 LC(END) DOWN_ARROW  &mt2 LC(HOME) UP_ARROW  &mt2 LC(RIGHT_ARROW) RIGHT_ARROW  &none  &none
&none        &none  &none  &none         &none         &none        &kp HOME                  &kp PAGE_DOWN            &kp PAGE_UP             &kp END                           &none  &none
                           &kp LGUI      &trans        &kp ENTER    &kp SPACE                 &trans                   &trans
            >;
        };

        SYM {
            display-name = "Symbols";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &none  &mt2 TILDE GRAVE  &kp LEFT_PARENTHESIS          &kp RIGHT_PARENTHESIS           &none      &none      &none  &none   &none  &none  &bootloader
&none  &none  &none             &mt2 LEFT_BRACE LEFT_BRACKET  &mt2 RIGHT_BRACE RIGHT_BRACKET  &none      &none      &none  &none   &none  &none  &none
&none  &none  &none             &mt2 PIPE NON_US_BACKSLASH    &mt2 QUESTION SLASH             &none      &none      &none  &none   &none  &none  &none
                                &kp LGUI                      &none                           &kp RET    &kp SPACE  &none  &trans
            >;
        };

        ADJ {
            display-name = "System";
            bindings = <
&trans  &kp F1        &kp F2        &kp F3        &kp F4      &kp F5            &kp F6       &kp F7  &kp F8  &kp F9  &kp F10      &trans
&trans  &kp F11       &kp F12       &trans        &trans      &studio_unlock    &trans       &tog 1  &trans  &trans  &trans       &trans
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_CLR  &bt BT_CLR_ALL    &num_word 5  &trans  &trans  &trans  &bootloader  &trans
                                    &trans        &trans      &trans            &trans       &trans  &trans
            >;
        };

        NUM {
            display-name = "Numbers";
            bindings = <
&none       &none                      &mt2 AMPERSAND N7              &mt2 ASTERISK N8       &mt2 LEFT_PARENTHESIS N9  &mt2 UNDERSCORE MINUS    &none   &none   &none   &none   &none        &trans
&caps_word  &mt2 RIGHT_PARENTHESIS N0  &mt2 DOLLAR NUMBER_4           &mt2 PERCENT N5        &mt2 CARET NUMBER_6       &mt2 PLUS EQUAL          &none   &trans  &trans  &trans  &trans       &none
&none       &kp STAR                   &mt2 RS(EXCLAMATION) NUMBER_1  &mt2 AT_SIGN NUMBER_2  &mt2 HASH NUMBER_3        &kp FSLH                 &none   &none   &none   &trans  &bootloader  &none
                                                                      &trans                 &kp DOT                   &kp NUMBER_0             &trans  &trans  &trans
            >;
        };

        FUN {
            bindings = <
&none  &kp F12  &kp F7          &kp F8  &kp F9  &none    &none  &none  &none  &none  &mt2 LC(PRINTSCREEN) PRINTSCREEN  &none
&none  &kp F11  &mt2 LA(F4) F4  &kp F5  &kp F6  &none    &none  &none  &none  &none  &none                             &none
&none  &kp F10  &kp F1          &kp F2  &kp F3  &none    &none  &none  &none  &none  &none                             &none
                                &none   &none   &none    &none  &none  &none
            >;

            label = "Function";
        };

        MED {
            bindings = <
&none  &none  &kp C_PLAY_PAUSE  &kp C_PREVIOUS     &kp C_NEXT       &none    &none  &none  &none  &none  &none  &none
&none  &none  &kp K_MUTE        &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &none    &none  &none  &none  &none  &none  &none
&none  &none  &none             &none              &none            &none    &none  &none  &none  &none  &none  &none
                                &none              &none            &none    &none  &none  &none
            >;

            label = "Media";
        };

        MSE {
            bindings = <
&none  &none  &mkp LCLK       &mmv MOVE_UP    &mkp RCLK        &none    &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &msc SCRL_RIGHT  &none  &none
&none  &none  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &none    &none           &mkp LCLK       &mkp RCLK     &mkp MCLK        &none  &none
&none  &none  &none           &none           &none            &none    &none           &none           &none         &none            &none  &none
                              &none           &none            &none    &none           &none           &none
            >;

            label = "Mouse";
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        l4 {
            if-layers = <2 3>;
            then-layer = <4>;
        };
    };
};
